#include <SFML/Graphics.hpp>
int main()
{
    srand(time(NULL));
    sf::RenderWindow window(sf::VideoMode(800, 600), "SFML works!");
    sf::CircleShape shape;
    shape.setRadius(30.f);
    sf::CircleShape shapeitem(10.f);
    sf::CircleShape shapehide(20.f);
    sf::Texture pngGhostTest;
    pngGhostTest.loadFromFile("C:/Users/0412t/source/repos/Profun/Kaitom/Kaitom/importt/Mute_Woman.png");
    sf::Sprite GhostTest;
    sf::Vector2u textureSize = pngGhostTest.getSize();


    sf::RectangleShape wall01(sf::Vector2f(10.f, 20.f));
    wall01.setPosition(100, 300);




    textureSize.x /= 10;
    textureSize.y /= 4;
    GhostTest.setTexture(pngGhostTest);
    GhostTest.setTextureRect(sf::IntRect(textureSize.x * 1, textureSize.y * 4, textureSize.x, textureSize.y));
    //sf::Texture pngmainKey;
    //pngmainKey.loadFromFile("C:/Users/0412t/source/repos/Profun/Kaitom/Kaitom/importt/keyy.png");
   // mainKey.setTexture(pngmainKey);
    //mainKey.setPosition(200,100);
    shape.setFillColor(sf::Color::Green);
    shapeitem.setFillColor(sf::Color::Blue);
    shapeitem.setPosition(100, 100); //hideghostinbox
    shapehide.setPosition(100, 200); //key
    //bool ishide=false;
    struct it {
        int posx;
        int posy;
        bool isgrab;
        sf::Texture pngmainKey;
        sf::Sprite mainKey;
    };
    it item[20];
    
    for (int i = 0; i < 20;i++) {
        item[i].posx = rand() % 800;
        item[i].posy = rand() % 600;
        item[i].isgrab = false;
        item[i].mainKey.setPosition(item[i].posx, item[i].posy);
        item[i].pngmainKey.loadFromFile("C:/Users/0412t/source/repos/Profun/Kaitom/Kaitom/importt/keyy.png");
        item[i].mainKey.setTexture(item[i].pngmainKey);
    }
    int xshape = 0, yshape = 0;
    int hidestate = 1;
    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
                window.close();
            if (event.type == sf::Event::KeyPressed) {
                if (event.key.code == sf::Keyboard::Left&& hidestate == 1) {
                    xshape -= 5;
                    shape.move(-5, 0);
                }
                if (event.key.code == sf::Keyboard::Right && hidestate == 1) {
                    xshape += 5;
                    shape.move(5, 0);
                }
                if (event.key.code == sf::Keyboard::Up && hidestate == 1) {
                    yshape -= 5;
                    shape.move(0, -5);
                }
                if (event.key.code == sf::Keyboard::Down && hidestate == 1) {
                    yshape += 5;
                    shape.move(0, 5);
                }
                if (xshape+30 <= 100+20 && xshape+30 >= 100 - 20 && yshape+30 <= 100+20 && yshape+30 >= 100 - 20 && event.key.code == sf::Keyboard::E) {
                    //ishide = true;
                    hidestate *= -1;
                }
            }
        }
        for (int i = 0; i < 20; i++) {
            if (item[i].posx+32 <= xshape+30+30 && item[i].posx+32  >= xshape-30+30 && item[i].posy+16  <= yshape+30+30 && item[i].posy+16  >= yshape-30+30) {
                item[i].isgrab = true;
            }

        }
        window.clear();
        if (hidestate == 1) {
            window.draw(shape);
        }
        window.draw(shapeitem);
        window.draw(wall01);
        //window.draw(shapehide);
        //window.draw(GhostTest);
        for (int i = 0; i < 20;i++) {
            if(item[i].isgrab ==false)
            window.draw(item[i].mainKey);
        }
        window.display();
    }

    return 0;
}
